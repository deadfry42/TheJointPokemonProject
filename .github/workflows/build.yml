name: Build

on: push

jobs:
  test-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: extractions/setup-just@v2
        with:
          just-version: 1.40.0
      - uses: actions/checkout@v4
      - name: "Install required dependencies"
        run: |
          sudo apt-get update
          sudo apt-get install libjpeg-dev libwebp-dev libtiff5-dev libsdl2-image-dev libsdl2-image-2.0-0 -y
      - name: Check just works
        run: just
      - name: Run clippy
        run: cargo clippy
      - name: Test ${{runner.os}}-${{runner.arch}}
        run: |
          cargo test

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: extractions/setup-just@v2
        with:
          just-version: 1.40.0
      - uses: actions/checkout@v4

      - name: Create build folder
        run: |
          mkdir builds
          mkdir builds/${{runner.os}}-${{runner.arch}}

      - name: "Install required dependencies"
        run: |
          sudo apt-get update
          sudo apt-get install libjpeg-dev libwebp-dev libtiff5-dev libsdl2-image-dev libsdl2-image-2.0-0 -y

      - name: Build ${{runner.os}}-${{runner.arch}}
        run: |
          cargo clean
          just build
          cp target/release/tjpp builds/${{runner.os}}-${{runner.arch}}
          cp -r assets builds/${{runner.os}}-${{runner.arch}}
      - name: Upload ${{runner.os}}-${{runner.arch}}
        uses: actions/upload-artifact@v4
        with:
          name: tjpp-${{runner.os}}-${{runner.arch}}
          path: |
            builds/${{runner.os}}-${{runner.arch}}

  build-linux-aarch64:
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: extractions/setup-just@v2
        with:
          just-version: 1.40.0

      - uses: actions/checkout@v4

      - name: Create build folder
        run: |
          mkdir builds
          mkdir builds/${{runner.os}}-${{runner.arch}}

      - name: "Install required dependencies"
        run: |
          sudo apt-get update
          sudo apt-get install libjpeg-dev libwebp-dev libtiff5-dev libsdl2-image-dev libsdl2-image-2.0-0 -y

      - name: Build ${{runner.os}}-${{runner.arch}}
        run: |
          cargo clean
          just build
          cp target/release/tjpp builds/${{runner.os}}-${{runner.arch}}
          cp -r assets builds/${{runner.os}}-${{runner.arch}}
      - name: Upload ${{runner.os}}-${{runner.arch}}
        uses: actions/upload-artifact@v4
        with:
          name: tjpp-${{runner.os}}-${{runner.arch}}
          path: |
            builds/${{runner.os}}-${{runner.arch}}

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: extractions/setup-just@v2
        with:
          just-version: 1.40.0

      - uses: actions/checkout@v4

      - name: Create build folder
        run: |
          mkdir builds
          mkdir builds/${{runner.os}}-${{runner.arch}}

      - name: "Install required dependencies"
        run: |
          choco install pkgconfiglite nasm

      - uses: libsdl-org/setup-sdl@main
        name: "Install SDL2"
        id: sdl
        with:
          install-linux-dependencies: true
          version: 2-latest
          version-sdl-image: 2-latest

      - name: Build ${{runner.os}}-${{runner.arch}}
        run: |
          cargo clean
          just build
          cp target/release/tjpp builds/${{runner.os}}-${{runner.arch}}
          cp -r assets builds/${{runner.os}}-${{runner.arch}}
      - name: Upload ${{runner.os}}-${{runner.arch}}
        uses: actions/upload-artifact@v4
        with:
          name: tjpp-${{runner.os}}-${{runner.arch}}
          path: |
            builds/${{runner.os}}-${{runner.arch}}

  build-macos:
    runs-on: macos-13
    steps:
      - uses: extractions/setup-just@v2
        with:
          just-version: 1.40.0
      - uses: actions/checkout@v4
      - name: "Install required dependencies"
        run: |
          brew install sdl2 sdl2_image
          export LIBRARY_PATH="$LIBRARY_PATH:$(brew --prefix)/lib"
      - name: Create build folder
        run: |
          mkdir builds
          mkdir builds/${{runner.os}}-${{runner.arch}}

      - name: Build ${{runner.os}}-${{runner.arch}}
        run: |
          cargo clean
          just build
          cp target/release/tjpp builds/${{runner.os}}-${{runner.arch}}
          cp -r assets builds/${{runner.os}}-${{runner.arch}}
      - name: Upload ${{runner.os}}-${{runner.arch}}
        uses: actions/upload-artifact@v4
        with:
          name: tjpp-${{runner.os}}-${{runner.arch}}
          path: |
            builds/${{runner.os}}-${{runner.arch}}

  build-macos-aarch64:
    runs-on: macos-latest
    steps:
      - uses: extractions/setup-just@v2
        with:
          just-version: 1.40.0
      - uses: actions/checkout@v4
      - name: "Install required dependencies"
        run: |
          brew install sdl2 sdl2_image
          export LIBRARY_PATH="$LIBRARY_PATH:$(brew --prefix)/lib"
          brew unlink sdl2 && brew link sdl2
      - name: Create build folder
        run: |
          mkdir builds
          mkdir builds/${{runner.os}}-${{runner.arch}}

      - name: Build ${{runner.os}}-${{runner.arch}}
        run: |
          cargo clean
          LIBRARY_PATH="$LIBRARY_PATH:/opt/homebrew/lib" just build
          cp target/release/tjpp builds/${{runner.os}}-${{runner.arch}}
          cp -r assets builds/${{runner.os}}-${{runner.arch}}
      - name: Upload ${{runner.os}}-${{runner.arch}}
        uses: actions/upload-artifact@v4
        with:
          name: tjpp-${{runner.os}}-${{runner.arch}}
          path: |
            builds/${{runner.os}}-${{runner.arch}}
